@charset 'utf-8';
@use "sass:math";
@import "https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;500;600;700;&display=swap";

:root {
  --noto: "Noto Sans JP", sans-serif;
  --yugo: "游ゴシック体", yugothic, "游ゴシック Medium", "Yu Gothic Medium", "游ゴシック", "Yu Gothic", sans-serif;
  --duration: 0.3s;
  --opacity: 0.7;
  --bg-color: #f2eade;
  --main-color: #4d3f1c;
}

@function clp($min-font-size, $max-font-size, $min-view-port: 768, $max-view-port: 1500) {
  $font-size-rate: $max-font-size - $min-font-size;
  $view-port-rate: $max-view-port - $min-view-port;
  $changing-size: math.div(math.round(math.div($font-size-rate, $view-port-rate) * 10000), 100);
  $fixed-size: math.div(
    math.round(($min-font-size - math.div($font-size-rate, $view-port-rate) * $min-view-port) * 62.5),
    1000
  );
  $min-rem-font-size: math.div(math.round($min-font-size * 62.5), 1000);
  $max-rem-font-size: math.div(math.round($max-font-size * 62.5), 1000);

  @return clamp(#{$min-rem-font-size}rem, #{$fixed-size}rem + #{$changing-size}vw, #{$max-rem-font-size}rem);
}

@function pct($small, $big, $bool: true) {
  $value: math.div($small, $big);
  $value: $value * 100;

  @if $bool {
    @return #{$value} + "%";
  } @else {
    @return #{$value} + vw;
  }
}

@mixin break($break: 768) {
  @media screen and (max-width: ($break + px)) {
    @content;
  }
}

@mixin hover {
  @media (hover) {
    &:hover {
      @content;
    }
  }
}

@function lh($fz, $lf) {
  $value: math.div($lf, $fz);

  @return $value;
}

@function ls($tracking) {
  $value: math.div($tracking, 1000);

  @return #{$value}em;
}

@mixin font($fz, $lf, $ls) {
  font-size: $fz + px;
  line-height: lh($fz, $lf);
  letter-spacing: ls($ls);
}

@mixin aspect($width, $height) {
  width: 100%;
  height: auto;
  aspect-ratio: $width / $height;
}

@mixin wrap($max-width: 1100) {
  width: 92%;
  max-width: $max-width + px;
  margin: 0 auto;
}

@mixin flex($jc, $ai, $gap: 0, $fd: row) {
  display: flex;
  flex-direction: $fd;
  gap: $gap;
  align-items: $ai;
  justify-content: $jc;
}

// --- utilsCSS start ---

.pc-b {
  display: block !important;

  @include break {
    display: none !important;
  }
}

.sp-b {
  display: none !important;

  @include break {
    display: block !important;
  }
}

.pc-ib {
  display: inline-block !important;

  @include break {
    display: none !important;
  }
}

.sp-ib {
  display: none !important;

  @include break {
    display: inline-block !important;
  }
}

.pc-f {
  display: flex !important;

  @include break {
    display: none !important;
  }
}

.sp-f {
  display: none !important;

  @include break {
    display: flex !important;
  }
}

.img-wrap {
  img {
    width: 100%;
    height: auto;
  }
}
